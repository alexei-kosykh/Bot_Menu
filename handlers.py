import gspread

from telegram import Update
from telegram.ext import ContextTypes

import state
from my_private_keys import USERS
from keyboards import main_keyboard
import edit_buying, get_ingredients_dish, get_menu_date, get_menu_today, find_recept, get_access_table

# List of users that can work with app
ALLOWED_USERS = USERS

# Comand /start
async def handle_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user

    # Checking user allow
    if user.username not in ALLOWED_USERS:
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –í–∞—à username –Ω–µ –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö.")
        return

    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_keyboard
    )

async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()  # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ! –∑–∞–∫—Ä—ã–≤–∞–µ—Ç "—á–∞—Å–∏–∫–∏" —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    user_id = query.from_user.id
    data = query.data  # –≤–æ—Ç —á—Ç–æ —Ç—ã –∑–∞–¥–∞—ë—à—å –≤ InlineKeyboardButton(callback_data="...")

    if data == "menu_today":
        await get_menu_today.run(update, context)

    elif data == "menu_date":
        state.USER_STATE[user_id] = "WAITING_FOR_DATE"
        await query.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 31:")

    elif data == "find_recept":
        state.USER_STATE[user_id] = "WAITING_FOR_DISH"
        await query.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞:")

    elif data == "edit_buying":
        state.USER_STATE[user_id] = "WAITING_FOR_BUY_INPUT"
        await edit_buying.run(update, context, "‚úèÔ∏è –í–Ω–µ—Å—Ç–∏ –∫—É–ø–ª–µ–Ω–Ω–æ–µ")

    else:
        await query.message.reply_text("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    user_id = update.effective_user.id
    text = update.message.text.strip()

    # Checking allow
    if user.username not in ALLOWED_USERS:
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
        return

    # --- Checking state ---
    if state.USER_STATE.get(user_id) == "WAITING_FOR_DISH":
        await get_ingredients_dish.run(update, context, text)
        state.USER_STATE.pop(user_id)
        return

    if state.USER_STATE.get(user_id) == "WAITING_FOR_BUY_INPUT":
        await edit_buying.run(update, context, text)
        return

    if state.USER_STATE.get(user_id) == "WAITING_FOR_DATE":
        await get_menu_date.run(update, context, text)
        state.USER_STATE.pop(user_id, None)
        return

    if text == "üìÖ –ú–µ–Ω—é –Ω–∞ —Å–µ–≥–æ–¥–Ω—è":
        await get_menu_today.run(update, context)
        return

    if text == "‚úèÔ∏è –í–Ω–µ—Å—Ç–∏ –∫—É–ø–ª–µ–Ω–Ω–æ–µ":
        state.USER_STATE[user_id] = "WAITING_FOR_BUY_INPUT"
        await update.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –∏ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: 3 –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å",
            parse_mode="Markdown", reply_markup=main_keyboard
        )
        return

    if text == "üîç –ù–∞–π—Ç–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã":
        state.USER_STATE[user_id] = "WAITING_FOR_DISH"
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞:", reply_markup=main_keyboard)
        return

    if text == "üóì –ü–æ–ª—É—á–∏—Ç—å –º–µ–Ω—é –ø–æ –¥–∞—Ç–µ":
        state.USER_STATE[user_id] = "WAITING_FOR_DATE"
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (–æ—Ç 1 –¥–æ 31):")
        return

    elif text:
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è", reply_markup=main_keyboard)
